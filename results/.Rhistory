wide
head(Indometh)
eod.prices <- reshape(just.prices, v.names="asset", idvar="date", timevar="p", direction="wide")
warnings()
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
wide
Indometh
wide
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
head(Indometh)
head(just.prices)
eod.prices <- reshape(just.prices, v.names="p", idvar="date", timevar="asset", direction="wide")
head(eod.prices)
eod.pnl <- EODPricesToPnl(eod.prices)
?write.csv
write.table(eod.prices, file="portfolios/FT/eod.prices")
write.table(eod.prices, file="portfolios/FT/eod.prices.csv")
dim(eod.prices)
write.csv(eod.prices, file="portfolios/FT/eod.prices.csv")
eod.pnl <- read.csv("portfolios/FT/eod.pnl.csv", col.names=c("date", "pnl"))
eod.pnl
head(eod.pnl)
eod.prices
trade.data
trade.data$pnl.basket <- eod.pnl$pnl
ggplot(trade.data, aes(x=date.entry, y=cumsum(pnl.basket))) + geom_line() +
xlab("Date") + ylab("PnL") +
ggtitle("Cumulative Performance, FT Assets - 2880 Strategy, SR = 1.37 (YTD 2014)")
ggplot(trade.data, aes(x=date.entry, y=cumsum(pnl.basket))) + geom_line() +
xlab("Date") + ylab("PnL") +
ggtitle("Cumulative Performance, FT Assets - 2880 Strategy, SR = 1.37 (YTD 2014)")
eod.data <- data.frame(date=trade.data$date, pnl=eod.pnl$pnl)
head(eod.data)
eod.data$type <- "asset"
trade.data$type <- "strategy"
all.data <- rbind(eod.data, trade.data)
head(trade.data)
trade.data <- aggregate(list(pnl=pnl.data$pnl), by=list(date.entry=pnl.data$date), FUN=mean)
trade.data$pnl <- trade.data$pnl/100
eod.data <- data.frame(date=trade.data$date, pnl=eod.pnl$pnl)
eod.data$type <- "asset"
trade.data$type <- "strategy"
all.data <- rbind(eod.data, trade.data)
head(all.data)
head(trade.data)
head(eod.data)
trade.data <- aggregate(list(pnl=pnl.data$pnl), by=list(date.entry=pnl.data$date), FUN=mean)
trade.data$pnl <- trade.data$pnl/100
colnames(trade.data) <- c("date", "pnl")
eod.pnl <- read.csv("portfolios/FT/eod.pnl.csv", col.names=c("date", "pnl"))
eod.pnl <- EODPricesToPnl(eod.prices)
eod.pnl <- read.csv("portfolios/FT/eod.pnl.csv", col.names=c("date", "pnl"))
eod.data <- data.frame(date=trade.data$date, pnl=eod.pnl$pnl)
eod.data$type <- "asset"
trade.data$type <- "strategy"
all.data <- rbind(eod.data, trade.data)
trade.data <- aggregate(list(pnl=pnl.data$pnl), by=list(date.entry=pnl.data$date), FUN=mean)
trade.data$pnl <- trade.data$pnl/100
colnames(trade.data) <- c("date", "pnl")
trade.data$pnl.cum <- cumsum(trade.data$pnl)
eod.pnl <- read.csv("portfolios/FT/eod.pnl.csv", col.names=c("date", "pnl"))
eod.data <- data.frame(date=trade.data$date, pnl=eod.pnl$pnl)
eod.data$pnl.cum <- cumsum(eod.data$pnl)
eod.data$type <- "asset"
trade.data$type <- "strategy"
all.data <- rbind(eod.data, trade.data)
ggplot(all.data, aes(x=date, y=pnl.cum, group=type, color=type)) + geom_line() +
xlab("Date") + ylab("PnL") +
ggtitle("Cumulative Performance, FT Assets - 2880 Strategy, SR = 1.37 (YTD 2014)")
trade.data
all.data <- rbind(eod.data, trade.data)
head(all.data)
tail(all.data)
tail(trade.data)
tail(eod.data)
trade.data <- aggregate(list(pnl=pnl.data$pnl), by=list(date.entry=pnl.data$date), FUN=mean)
trade.data$pnl <- trade.data$pnl
colnames(trade.data) <- c("date", "pnl")
trade.data$pnl.cum <- cumsum(trade.data$pnl)
eod.pnl <- read.csv("portfolios/FT/eod.pnl.csv", col.names=c("date", "pnl"))
eod.data <- data.frame(date=trade.data$date, pnl=eod.pnl$pnl)
eod.data$pnl.cum <- cumsum(eod.data$pnl)
eod.data$type <- "asset"
trade.data$type <- "strategy"
all.data <- rbind(eod.data, trade.data)
ggplot(all.data, aes(x=date, y=pnl.cum, group=type, color=type)) + geom_line() +
xlab("Date") + ylab("PnL") +
ggtitle("Cumulative Performance, FT Assets - 2880 Strategy, SR = 1.37 (YTD 2014)")
SharpeRatio(all.data[type=="asset"]$pnl)
all.data <- data.table(rbind(eod.data, trade.data))
SharpeRatio(all.data[type=="asset"]$pnl)
SharpeRatio(all.data[type=="strategy"]$pnl)
ggplot(all.data, aes(x=date, y=pnl.cum, group=type, color=type)) + geom_line() +
xlab("Date") + ylab("PnL") +
ggtitle("Cumulative Performance, FT Assets - 2880 Strategy")
SharpeRatio(all.data[type=="asset"]$pnl)
SharpeRatio(all.data[type=="strategy"]$pnl)
sum(all.data[type=="asset"]$pnl)
sum(all.data[type=="strategy"]$pnl)
a1 <- read.csv("../reference/aapl_check1.txt")
head(a1)
a2 <- read.csv("../reference/aapl_check2.txt")
a2 <- read.csv("../reference/aapl_check2.csv")
head(a2)
a1 <- read.csv("../reference/aapl_check1.txt", header=F,
col.names=c("asset","d","t","p","s","v"))
a2 <- read.csv("../reference/aapl_check2.csv", header=F,
col.names=c("d","t","p","s","v"))
a1$asset<- NULL
a1 <- data.table(a1)
a2 <- data.table(a2)
a1
a2
length(unique(a1$date))
length(unique(a1$d))
length(unique(a2$d))
length(unique(a1$t))
length(unique(a2$t))
d1 <- unique(a1$date)
d2 <- unique(a2$date)
d2[!(d2$date %in% d1)]
d2[(d2$date %in% d1)]
d2[!(d2 %in% d1)]
d2[(d2 %in% d1)]
d2[d2 %in% d1]
d2 %in% d1
d1
d1 <- unique(a1$d)
d2 <- unique(a2$d)
d2[d2 %in% d1]
d2[!(d2 %in% d1)]
a2 <- a2[d != "2012-11-23" & d != "2012-12-24"]
d1 <- unique(a1$d)
d2 <- unique(a2$d)
d2[!(d2 %in% d1)]
dim(a1)
dim(a2)
a1
a2
a1$v <- a1$v/60
a1
a2
summary(a1$v)
summary(a2$v)
sum(a1$v == a2$v)
sum(a1$d == a2$d)/length(a1$d)
sum(a1$d == a2$d)
sum(as.character(a1$d) == as.character(a2$d))
sum(as.character(a1$d) == as.character(a2$d))/length(a1$d)
sum(as.character(a1$t) == as.character(a2$t))/length(a1$d)
sum(a1$p == a2$p)/length(a1$d)
sum(a1$v == a2$v)/length(a1$d)
0.86^(1/3)
a1[a1$v != a2$v]
head(a1[a1$v != a2$v], 20)
head(a2[a1$v != a2$v], 20)
sum(a1$v)
sum(a2$v)
sum(a1$v)/sum(a2$v)
sum(a1$v)/sum(a2$v)-1
head(a1[a1$v == a2$v], 20)
head(a2[a1$v == a2$v], 20)
head(a1[a1$v == a2$v]$s, 20)
head(a2[a1$v == a2$v]$s, 20)
s1 <- a1[a1$v == a2$v]$s
s2 <- a2[a1$v == a2$v]$s
ggplot(data.frame(s1=s1, s2=s2), aes(x=s1, y=s2)) + geom_point()
s1 <- a1[a1$v == a2$v & a1$v == 1]$s
s2 <- a2[a1$v == a2$v & a1$v == 1]$s
dim(s1)
length(s1)
ggplot(data.frame(s1=s1, s2=s2), aes(x=s1, y=s2)) + geom_point()
require(data.table)
require(ggplot2)
require(WriteXLS)
load("~/Documents/isentium/signal/portfolios/ahag/pnl_data_A.RData")
pnl.stats <- data.table(pnl.stats)
pnl.data <- data.table(pnl.data)
SharpeRatio <- function(pnl.daily) {
sr <- mean(pnl.daily) / sd(pnl.daily) * sqrt(252)
return(sr)
}
p <- pnl.stats[sample == "in" & param == "1.10" & stat == "sharpe"]
summary(p$value)
p <- pnl.stats[sample == "in" & param == "1.10" & stat == "total.pnl"]
summary(p$value)
q <- pnl.data[date >= "2014-01-01" & date <= "2014-07-08" & param == "1.10"]
q.daily <- aggregate(list(pnl=q$pnl), by=list(date=q$date), FUN=mean)
sum(q.daily$pnl)
SharpeRatio(q.daily$pnl)
ggplot(q.daily, aes(x=date, y=cumsum(pnl))) + geom_line() +
ggtitle("2014 YTD Performance, 1_10 Sentimeter, FT assets")
eod.pnl <- read.csv("portfolios/FT/eod.pnl.csv", col.names=c("date", "pnl"))
eod.data <- data.frame(date=trade.data$date, pnl=eod.pnl$pnl)
head(q.daily)
eod.data <- data.frame(date=q.daily$date, pnl=eod.pnl$pnl)
tail(q.daily)
head(eod.pnl)
tail(eod.pnl)
tail(eod.pnl, 10)
tail(eod.pnl, 15)
eod.pnl <- eod.pnl[3:113,]
head(eod.pnl)
tail(eod.pnl)
head(q.daily)
tail(q.daily)
eod.pnl <- read.csv("portfolios/FT/eod.pnl.csv", col.names=c("date", "pnl"))
head(eod.pnl)
eod.pnl <- eod.pnl[3:113,]
head(eod.pnl)
tail(eod.pnl)
head(q.daily)
eod.pnl <- read.csv("portfolios/FT/eod.pnl.csv", col.names=c("date", "pnl"))
head(eod.pnl)
eod.pnl <- eod.pnl[1:113,]
eod.data <- data.frame(date=q.daily$date, pnl=eod.pnl$pnl)
q.daily$pnl.cum <- cumsum(q.daily$pnl)
eod.data$pnl.cum <- cumsum(eod.data$pnl)
eod.data$type <- "asset"
trade.data$type <- "strategy"
q.daily$type <- "strategy"
all.data <- data.table(rbind(eod.data, q.daily))
head(all.data)
tail(all.data)
ggplot(all.data, aes(x=date, y=pnl.cum, group=type, color=type)) + geom_line() +
xlab("Date") + ylab("PnL") +
ggtitle("Cumulative Performance, FT Assets - 2880 Strategy")
q.daily <- aggregate(list(pnl=q$pnl), by=list(date=q$date), FUN=mean)
q.daily$pnl <- q.daily$pnl/100
q.daily$pnl.cum <- cumsum(q.daily$pnl)
sum(q.daily$pnl)
SharpeRatio(q.daily$pnl)
eod.pnl <- read.csv("portfolios/FT/eod.pnl.csv", col.names=c("date", "pnl"))
eod.pnl <- eod.pnl[1:113,]
eod.data <- data.frame(date=q.daily$date, pnl=eod.pnl$pnl)
eod.data$pnl.cum <- cumsum(eod.data$pnl)
eod.data$type <- "asset"
q.daily$type <- "strategy"
all.data <- data.table(rbind(eod.data, q.daily))
ggplot(all.data, aes(x=date, y=pnl.cum, group=type, color=type)) + geom_line() +
xlab("Date") + ylab("PnL") +
ggtitle("Cumulative Performance, FT Assets - 2880 Strategy")
ggplot(all.data, aes(x=date, y=pnl.cum, group=type, color=type)) + geom_line() +
xlab("Date") + ylab("PnL") +
ggtitle("Cumulative Performance, FT Assets - 1/10 Strategy")
SharpeRatio(all.data[type=="asset"]$pnl)
SharpeRatio(all.data[type=="strategy"]$pnl)
sum(all.data[type=="asset"]$pnl)
sum(all.data[type=="strategy"]$pnl)
source("Rcode/load_csv.R")
require(WriteXLS)
pf.name <- "ETFrank_to"
pf.path <- "portfolios/"
#ProcessPortfolio(pf.name, pf.path)
l <- LoadPortfolio(pf.name, pf.path)
head(l[[1]]$data)
i <- 3
asset.name <- l[[i]]$name
d <- l[[i]]$data
d$date_hour <- paste(d$date, "_", substring(d$time, 1, 2), sep="")
vol.per.hr <- aggregate(list(volume=d$volume), by=list(date_hour=d$date_hour), FUN=sum)
vol.per.hr$asset <- asset.name
head(vol.per.hr)
price.per.hr <- aggregate(list(price=d$stock), by=list(date_hour=d$date_hour), FUN=function(x) {x[length(x)]})
head(price.per.hr)
price.per.hr$asset <- asset.name
head(price.per.hr)
head(vol.per.hr)
hr.stats <- merge(vol.per.hr, price.per.hr, by=c("asset", "date_hour"))
head(hr.stats)
source('~/Documents/isentium/signal/Rcode/research/adam_hourlyvolume.R', echo=TRUE)
source('~/Documents/isentium/signal/Rcode/research/adam_hourlyvolume.R', echo=TRUE)
asset.name <- l[[i]]$name
d <- l[[i]]$data
d$date_hour <- paste(d$date, "_", substring(d$time, 1, 2), sep="")
vol.per.hr <- aggregate(list(volume=d$volume), by=list(date_hour=d$date_hour), FUN=sum)
vol.per.hr$asset <- asset.name
head(vol.per.hr)
d$date_hour <- paste(d$date, "_", substring(d$time, 1, 4), sep="")
vol.per.hr <- aggregate(list(volume=d$volume), by=list(date_hour=d$date_hour), FUN=sum)
vol.per.hr$asset <- asset.name
head(vol.per.hr)
price.per.hr <- aggregate(list(price=d$stock), by=list(date_hour=d$date_hour), FUN=function(x) {x[length(x)]})
price.per.hr$asset <- asset.name
hr.stats <- merge(vol.per.hr, price.per.hr, by=c("asset", "date_hour"))
head(hr.stats)
source('~/Documents/isentium/signal/Rcode/research/adam_hourlyvolume.R', echo=TRUE)
?write.csv
write.table(hourly.volume, file="reference/adam_10minvolumeandprice_tickeronly.csv")
write.table(hourly.volume, file="reference/adam_10minvolumeandprice_curated.csv")
source('~/Documents/isentium/signal/Rcode/research/adam_hourlyvolume.R', echo=TRUE)
tail(hourly.volume)
source('~/Dropbox (Personal)/Projects/game AI/crossword/parse_results.R', echo=TRUE)
p1 <- ggplot(rs[win == "true"], aes(x=n+x/10, y=log(t.adj), group=n+x/10)) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
p2 <- ggplot(rs[win == "false"], aes(x=n+x/10, y=log(t.adj), group=n+x/10)) +
geom_boxplot() + geom_point() + ggtitle("incorrect") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
multiplot(plotlist=list(p1, p2))
p1 <- ggplot(rs, aes(x=n+x/10, y=log(t.adj), group=win)) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n+x/10, y=log(t.adj), group=win)) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n+x/10, y=log(t.adj), group=win)) +
geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n+x/10, y=log(t.adj), group=win, color=win)) +
geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n+x/10, y=log(t.adj), group=day, color=day)) +
geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n+x/10, y=log(t.adj), group=as.character(day), color=as.character(day))) +
geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n+x/10, y=log(t.adj), group=as.character(day), color=as.character(day))) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n+x/10, y=log(t.adj),
group=paste(n+x/10, as.character(day)), color=paste(n+x/10, as.character(day)))) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n+x/10, y=log(t.adj),
ggplot(rs, aes(x=n+x/10, y=log(t.adj),
group=paste(n+x/10, as.character(day)), color=paste("",as.character(day)))) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n+x/10, y=log(t.adj),
group=paste(n+x/10, as.character(day)), color=paste("",as.character(day)))) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n, y=log(t.adj),
group=paste(n, as.character(day)), color=paste("",as.character(day)))) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n, y=log(t.adj),
group=paste(n, as.character(day)), color=paste("",as.character(day)))) +
geom_boxplot() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=day, y=log(t.adj),
group=paste(n, as.character(day)), color=paste("",as.character(day)))) +
geom_boxplot() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=day, y=log(t.adj),
group=paste("", as.character(day)), color=paste("",as.character(day)))) +
geom_boxplot() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
rs$day.name <- ""
rs$day.name[rs$day == 0] <- "6_Sun"; rs$day.name[rs$day == 1] <- "0_Mon"; rs$day.name[rs$day == 2] <- "1_Tue";
ggplot(rs, aes(x=day.name, y=log(t.adj),
group=day.name, color=day.name)) +
geom_boxplot() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
rs$day.name <- ""
rs$day.name[rs$day == 0] <- "6_Sun"; rs$day.name[rs$day == 1] <- "0_Mon"; rs$day.name[rs$day == 2] <- "1_Tue";
rs$day.name[rs$day == 3] <- "4_Wed"; rs$day.name[rs$day == 4] <- "5_Thu"; rs$day.name[rs$day == 5] <- "6_Fri"; rs$day.name[rs$day == 6] <- "7_Fri";
ggplot(rs, aes(x=day.name, y=log(t.adj),
group=day.name, color=day.name)) +
geom_boxplot() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
rs$day.name <- ""
rs$day.name[rs$day == 0] <- "6_Sun"; rs$day.name[rs$day == 1] <- "0_Mon"; rs$day.name[rs$day == 2] <- "1_Tue";
rs$day.name[rs$day == 3] <- "2_Wed"; rs$day.name[rs$day == 4] <- "3_Thu"; rs$day.name[rs$day == 5] <- "4_Fri"; rs$day.name[rs$day == 6] <- "5_Fri";
ggplot(rs, aes(x=day.name, y=log(t.adj),
group=day.name, color=day.name)) +
geom_boxplot() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=day.name, y=log(t.adj),
group=day.name, color=day.name)) +
geom_boxplot() + ggtitle("time by day of week") + xlab("day of week") + ylab("log(typing-adjusted time)")
ggplot(rs[win == "true"], aes(x=day.name, y=log(t.adj),
group=day.name, color=day.name)) +
geom_boxplot() + ggtitle("time by day of week") + xlab("day of week") + ylab("log(typing-adjusted time)")
ggplot(rs[win == "true"], aes(x=day.name, y=log(t.adj),
group=day.name, color=day.name)) +
geom_boxplot() + ggtitle("time by day of week") + xlab("day of week") + ylab("log(typing-adjusted time)")
ggplot(rs[win == "false"], aes(x=day.name, y=log(t.adj),
group=day.name, color=day.name)) +
geom_boxplot() + ggtitle("time by day of week") + xlab("day of week") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=day.name, y=log(t.adj),
group=day.name, color=day.name)) +
geom_boxplot() + ggtitle("time by day of week") + xlab("day of week") + ylab("log(typing-adjusted time)")
rs[day == 0 & n == 5 & x == 2]
rs[day == 0 & n == 5]
ggplot(rs[day == 0 & n == 5], aes(x=x, y=t.adj)) + geom_point()
ggplot(rs[day == 0 & n == 5], aes(x=x, y=t.adj)) + geom_point()
ggplot(rs[day == 0 & n == 5], aes(x=x, y=t.adj, group=win, color=win)) + geom_point()
ggplot(rs, aes(x=n, y=t.adj, group=win, color=win)) + geom_point()
ggplot(rs, aes(x=n, y=t.adj, group=win, color=win)) + geom_point()
ggplot(rs, aes(x=n, y=log(t.adj), group=win, color=win)) + geom_point()
ggplot(rs, aes(x=n, y=log(t.adj), group=paste(n, win), color=win)) + geom_point() + geom_boxplot()
ggplot(rs, aes(x=n, y=log(t.adj), group=paste(n, win), color=win)) +
ggtitle("time vs word length") + xlab("word length") + ylab("log(typing-adjusted time)")
geom_point() + geom_boxplot()
ggplot(rs, aes(x=n, y=log(t.adj), group=paste(n, win), color=win)) +
ggtitle("time vs word length") + xlab("word length") + ylab("log(typing-adjusted time)") +
geom_point() + geom_boxplot()
fit <- lm(t.adj ~ n + x + day, data=rs)
summary(fit)
plot(fit)
faithful
head(faithful)
ggplot(faithful, aes(x=eruptions, y=waiting)) + geom_point()
fit <- lm(t.adj ~ n + x + day + win, data=rs)
summary(fit)
help(summary.lm)
fit <- lm(t.adj ~ n + x + day, data=rs)
summary(fit)
rs$rand <- rnorm(dim(rs)[1])
fit <- lm(t.adj ~ n + x + day + win + rand, data=rs)
summary(fit)
fit <- lm(t.adj ~ n + x + day + rand, data=rs)
summary(fit)
fit <- lm(t.adj ~ n + x + day + win, data=rs)
summary(fit)
fit <- lm(t.adj ~ n + x + day, data=rs)
summary(fit)
fit <- lm(t.adj ~ n + x + day, data=rs[win == "true"])
summary(fit)
fit <- lm(t.adj ~ n + x + day, data=rs[win == "false"])
summary(fit)
fit <- lm(t.adj ~ n + x + day, data=rs)
summary(fit)
rs$day.adj <- 0
rs$day.adj[rs$day == 0] <- 4; rs$day.adj[rs$day == 1] <- 1; rs$day.adj[rs$day == 2] <- 2;
rs$day.adj[rs$day == 3] <- 3; rs$day.adj[rs$day == 4] <- 5; rs$day.adj[rs$day == 5] <- 6; rs$day.adj[rs$day == 6] <- 7;
fit <- lm(t.adj ~ n + x + day.adj, data=rs)
summary(fit)
fit <- lm(t.adj ~ n + x + day.adj + win, data=rs)
summary(fit)
fit <- lm(win ~ n + x + day.adj, data=rs)
summary(fit)
head(rs)
rs$win.10 <- 1
rs$win.10[rs$win == "false"] <- 0
fit <- lm(win.10 ~ n + x + day.adj, data=rs)
summary(fit)
plot(fit)
p.win <- aggregate(list(p.win=rs$win.10), by=list(n=rs$n, x=rs$x, day.adj=rs$day.adj), FUN=mean)
p.win
head(p.win)
fit <- lm(win.10 ~ n + x + day.adj, data=rs)
ggplot(p.win, aes(x=n, y=p.win)) + geom_point()
ggplot(p.win, aes(x=n, y=p.win)) + geom_point()
ggplot(p.win, aes(x=x, y=p.win)) + geom_point()
ggplot(p.win, aes(x=day.adj, y=p.win)) + geom_point()
fit <- lm(p.win ~ n + x + day.adj, data=p.win)
summary(fit)
plot(fit)
p.win <- aggregate(list(p.win=rs$win.10), by=list(n=rs$n, x=rs$x, day.adj=rs$day.adj), FUN=mean)
fit <- lm(p.win ~ n + x + day.adj, data=p.win)
summary(fit)
rs$t.guess <- 0.73 - 0.054 * rs$n + 0.128 & rs$x - 0.037 * rs$day.adj
ggplot(rs[day == 0 & n == 5], aes(x=x, y=t.adj, group=win, color=win)) + geom_point()
ggplot(rs, aes(x=day.name, y=log(t.adj), group=day.name, color=day.name)) +
geom_boxplot() + ggtitle("time by day of week") + xlab("day of week") + ylab("log(typing-adjusted time)")
p1 <- ggplot(rs[win == "true"], aes(x=n+x/10, y=log(t.adj), group=n+x/10)) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
p2 <- ggplot(rs[win == "false"], aes(x=n+x/10, y=log(t.adj), group=n+x/10)) +
geom_boxplot() + geom_point() + ggtitle("incorrect") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
multiplot(plotlist=list(p1, p2))
p1 <- ggplot(rs[win == "true"], aes(x=n+x/10, y=log(t.adj), group=n+x/10)) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
p2 <- ggplot(rs[win == "true"], aes(x=n+x/10, y=log(t.guess), group=n+x/10)) +
geom_boxplot() + geom_point() + ggtitle("incorrect") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
multiplot(plotlist=list(p1, p2))
head(rs)
rs$n
rs$x
rs$day.adj
summary(fit)
0.054 * rs$n
rs$t.guess <- 0.73 - 0.054 * rs$n + 0.128 * rs$x - 0.037 * rs$day.adj
p1 <- ggplot(rs[win == "true"], aes(x=n+x/10, y=log(t.adj), group=n+x/10)) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
p2 <- ggplot(rs[win == "true"], aes(x=n+x/10, y=log(t.guess), group=n+x/10)) +
geom_boxplot() + geom_point() + ggtitle("incorrect") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
multiplot(plotlist=list(p1, p2))
summary(fit)
fit <- lm(t.adj ~ n + x + day.adj, data=rs)
summary(fit)
rs$t.guess <- 0.473 + 1.142 * rs$n - 1.449 * rs$x + 0.544 * rs$day.adj
p1 <- ggplot(rs[win == "true"], aes(x=n+x/10, y=log(t.adj), group=n+x/10)) +
geom_boxplot() + geom_point() + ggtitle("correct") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
p2 <- ggplot(rs[win == "true"], aes(x=n+x/10, y=log(t.guess), group=n+x/10)) +
geom_boxplot() + geom_point() + ggtitle("incorrect") + xlab("word length + (letters completed)/10") + ylab("log(typing-adjusted time)")
multiplot(plotlist=list(p1, p2))
ggplot(rs, aes(x=n, y=x, size=t, group=win, color=win)) + geom_point(position = position_jitter(width = .3, height=.3)) +
xlab("word length") + ylab("letters filled") + ggtitle("time vs n, x")
ggplot(rs, aes(x=day.name, y=log(t.adj), group=day.name, color=day.name)) +
geom_boxplot() + ggtitle("time by day of week") + xlab("day of week") + ylab("log(typing-adjusted time)")
ggplot(rs, aes(x=n, y=log(t.adj), group=paste(n, win), color=win)) +
ggtitle("time vs word length") + xlab("word length") + ylab("log(typing-adjusted time)") +
geom_point() + geom_boxplot()
p.win <- aggregate(list(p.win=rs$win.10), by=list(n=rs$n, x=rs$x, day.adj=rs$day.adj), FUN=mean)
fit <- lm(p.win ~ n + x + day.adj, data=p.win)
summary(fit)
by.n.x.day <- aggregate(list(p.win=rs$win.10), by=list(n=rs$n, x=rs$x, day.adj=rs$day.adj), FUN=mean)
fit <- lm(p.win ~ n + x + day.adj, data=by.n.x.day)
summary(fit)
by.n.x.day$p.win.guess <- 0.728 - 0.054 * by.n.x.day$n + 0.128 * by.n.x.day$x - 0.037 * by.n.x.day$day.adj
head(by.n.x.day)
ggplot(by.n.x.day, aes(x=n, y=p.win.guess)) + geom_point()
ggplot(by.n.x.day, aes(x=x, y=p.win.guess)) + geom_point()
ggplot(by.n.x.day, aes(x=day.adj, y=p.win.guess)) + geom_point()
hist(by.n.x.day$p.win)
hist(by.n.x.day$p.win.guess)
hist(by.n.x.day$p.win)
hist(pmin(by.n.x.day$p.win, 1))
hist(pmin(by.n.x.day$p.win.guess, 1))
by.n.x.day <- aggregate(list(p.win=rs$win.10), by=list(n=rs$n, x=rs$x, day.adj=rs$day.adj), FUN=mean)
fit <- lm(p.win ~ n + x + day.adj, data=by.n.x.day)
summary(fit)
by.n.x.day
by.n.x.day <- aggregate(list(p.win=rs$win.10), by=list(n=rs$n, x=rs$x, day.adj=rs$day.adj), FUN=mean)
fit <- lm(p.win ~ n + x + day.adj, data=by.n.x.day)
summary(fit)
by.n.x.day$p.win.guess <- 0.728 - 0.054 * by.n.x.day$n + 0.128 * by.n.x.day$x - 0.037 * by.n.x.day$day.adj
by.n.x.day
hist(by.n.x.day$p.win)
hist(by.n.x.day$p.win.guess)
hist(sqrt(by.n.x.day$p.win.guess))
hist(by.n.x.day$p.win.guess^2)
hist(by.n.x.day$p.win.guess)
