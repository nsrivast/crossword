exp(4)
exp(2)
f_ntweets <- function(x) {
res <- 0
if (x > 0) { res <- 5 }
if (x > 7) { res <- 15 }
if (x > 55) { res <- 25 }
return(res)
}
r$ics2 <- r$ics2 + f_ntweets(r$ntweets)
r$ics2 <- r$ics2 + lapply(r$ntweets, f_ntweets)
dum <- lapply(r$ntweets, f_ntweets)
hist(dum)
head(dum)
dum <- as.numeric(lapply(r$ntweets, f_ntweets))
head(dum)
head(r$ntweets)
hist(dum)
hist(r$impact)
hist(r$impact[r$impact != 0])
length(r$impact[r$impact != 0])
length(r$impact[r$impact == 0])
hist(r$impact[r$impact != 0])
summary(r$impact[r$impact != 0])
hist(log(r$impact[r$impact != 0]))
exp(-5)
exp(-2)
exp(-1)
r <- read.csv("reference/AAPL_20130101_20130531.csv", col.names=my.col.names)
f_ntweets <- function(x) {
res <- 0
if (x > 0) { res <- 5 }
if (x > 7) { res <- 15 }
if (x > 55) { res <- 25 }
return(res)
}
f_impact <- function(x) {
res <- 0
if (x > 0) { res <- 15 }
if (x > 0.5) { res <- 20 }
if (x > 1) { res <- 25 }
return(res)
}
r$ics1 <- r$finbio*25
r$ics2 <- 0
r$ics2[r$nfollowers > 0] <- log(r$nfollowers[r$nfollowers > 0])
r$ics3 <- as.numeric(lapply(r$ntweets, f_ntweets))
head(r)
r$ics3 <- as.numeric(lapply(r$ntweets, f_ntweets))
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
hist(r$ics1)
hist(r$ics2)
hist(r$ics3)
f_ntweets <- function(x) {
res <- 0
if (x > 0) { res <- 5 }
if (x > 5) { res <- 15 }
if (x > 50) { res <- 25 }
return(res)
}
r$ics3 <- as.numeric(lapply(r$ntweets, f_ntweets))
hist(r$ics3)
hist(r$ics4)
source('~/Documents/isentium/signal/Rcode/research/ics_new.R', echo=TRUE)
hist(r$ics4)
r$ics_new <- r$ics1 + r$ic2 + r$ics3 + r$ics4
r$ics_new <- r$ics1 + r$ics2 + r$ics3 + r$ics4
hist(r$ics_new)
summary(r$ics_new)
f_ntweets <- function(x) {
res <- 0
#  if (x > 0) { res <- 5 }
if (x > 5) { res <- 15 }
if (x > 50) { res <- 25 }
return(res)
}
f_impact <- function(x) {
res <- 0
if (x > 0.25) { res <- 5 }
if (x > 0.5) { res <- 15 }
if (x > 1) { res <- 25 }
return(res)
}
r$ics1 <- r$finbio*25
r$ics2 <- 0
r$ics2[r$nfollowers > 0] <- log(r$nfollowers[r$nfollowers > 0])
r$ics3 <- as.numeric(lapply(r$ntweets, f_ntweets))
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- r$ics1 + r$ics2 + r$ics3 + r$ics4
hist(r$ics_new)
r$ics2 <- 0
r$ics2[r$nfollowers > 5] <- log(r$nfollowers[r$nfollowers > 0])
r$ics2 <- 0
r$ics2[r$nfollowers > 5] <- log(r$nfollowers[r$nfollowers > 5])
r$ics_new <- r$ics1 + r$ics2 + r$ics3 + r$ics4
hist(r$ics_new)
length(r$ics_new[r$ics_new == 0])
?lapply
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 2)
hist(r$ics_new)
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
require(ggplot2)
ggplot(r, aes(x=ics_new, y=ics1)) + geom_point()
ggplot(head(r, 10000), aes(x=ics_new, y=ics2)) + geom_point()
ggplot(head(r, 10000), aes(x=ics_new, y=ics3)) + geom_point()
ggplot(head(r, 10000), aes(x=ics_new, y=ics4)) + geom_point()
f_ntweets <- function(x) {
res <- 0
if (x > 0) { res <- 5 }
if (x > 2.5) { res <- 10 }
if (x > 5) { res <- 15 }
if (x > 25) { res <- 20 }
if (x > 50) { res <- 25 }
return(res)
}
f_impact <- function(x) {
res <- 0
if (x > 0.25) { res <- 5 }
if (x > 0.5) { res <- 15 }
if (x > 1) { res <- 25 }
return(res)
}
r$ics3 <- as.numeric(lapply(r$ntweets, f_ntweets))
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
ggplot(head(r, 10000), aes(x=ics1, y=ics_new)) + geom_point()
ggplot(head(r, 10000), aes(x=ics1, y=ics_new)) + geom_point(jitter=0.1)
ggplot(head(r, 10000), aes(x=ics1, y=ics_new)) + geom_point(jitter=1)
ggplot(head(r, 10000), aes(x=ics1, y=ics_new)) + geom_point(jitter=10)
ggplot(head(r, 10000), aes(x=ics1, y=ics_new)) + geom_jitter()
ggplot(head(r, 10000), aes(x=ics1, y=ics_new)) + geom_jitter(position = position_jitter(width = .5))
ggplot(head(r, 10000), aes(x=ics1, y=ics_new)) + geom_jitter(position = position_jitter(width = 5))
ggplot(head(r, 10000), aes(x=ics2, y=ics_new)) + geom_point()
ggplot(head(r, 10000), aes(x=ics3, y=ics_new)) + geom_point()
ggplot(head(r, 10000), aes(x=ics4, y=ics_new)) + geom_point()
ggplot(head(r, 10000), aes(x=ics3, y=ics_new)) + geom_jitter(position = position_jitter(width = .5))
ggplot(head(r, 10000), aes(x=ics4, y=ics_new)) + geom_jitter(position = position_jitter(width = .5))
f_ntweets <- function(x) {
res <- 0
if (x > 0) { res <- 10 }
if (x > 5) { res <- 15 }
if (x > 50) { res <- 20 }
if (x > 1000) { res <- 22.5 }
if (x > 10000) { res <- 25 }
return(res)
}
r$ics3 <- as.numeric(lapply(r$ntweets, f_ntweets))
f_impact <- function(x) {
res <- 0
if (x > 0.10) { res <- 5 }
if (x > 0.25) { res <- 10 }
if (x > 0.5) { res <- 15 }
if (x > 1) { res <- 20 }
if (x > 2) { res <- 25 }
return(res)
}
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
f_ntweets <- function(x) {
res <- 0
if (x > 0) { res <- 10 }
if (x > 50) { res <- 15 }
if (x > 1000) { res <- 20 }
if (x > 10000) { res <- 22.5 }
if (x > 100000) { res <- 25 }
return(res)
}
r$ics3 <- as.numeric(lapply(r$ntweets, f_ntweets))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
summary(r$ics_new)
length(r$ics_new[r$ics_new == 0])
f_ntweets <- function(x) {
res <- 0
if (x > 5) { res <- 10 }
if (x > 50) { res <- 15 }
if (x > 1000) { res <- 20 }
if (x > 10000) { res <- 22.5 }
if (x > 100000) { res <- 25 }
return(res)
}
f_impact <- function(x) {
res <- 0
if (x > 0.25) { res <- 5 }
if (x > 0.5) { res <- 10 }
if (x > 0.75) { res <- 15 }
if (x > 1) { res <- 20 }
if (x > 2) { res <- 25 }
return(res)
}
r$ics1 <- r$finbio*25
r$ics2 <- 0
r$ics2[r$nfollowers > 5] <- log(r$nfollowers[r$nfollowers > 5])
r$ics3 <- as.numeric(lapply(r$ntweets, f_ntweets))
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
length(r$ics_new[r$ics_new == 0])
dim(r)
length(r$ics_new[r$ics_new > 0])
137/423
summary(r$ics)
summary(r$ics_new)
summary(r$ics[r$ics != 1000])
summary(r$ics_new)
length(r$ics[r$ics == 0])
length(r$ics_new[r$ics_new == 0])
ggplot(head(r, 10000), aes(x=ntweets, y=ics3)) + geom_point()
ggplot(head(r, 10000), aes(x=ntweets, y=log(ntweets))) + geom_point()
ggplot(head(r, 10000), aes(x=ics3, y=log(ntweets))) + geom_point()
ggplot(head(r, 10000), aes(x=ics3, y=log(ntweets*2))) + geom_point()
ggplot(head(r, 10000), aes(x=ics3, y=2*log(ntweets))) + geom_point()
r$ics3 <- 0
r$ics2[r$ntweets > 0] <- max(log(r$ntweets[r$ntweets > 0])*2)
r$ics1 <- r$finbio*25
r$ics2 <- 0
r$ics2[r$nfollowers > 5] <- log(r$nfollowers[r$nfollowers > 5])
r$ics3 <- 0
r$ics3[r$ntweets > 0] <- max(log(r$ntweets[r$ntweets > 0])*2)
ggplot(head(r, 10000), aes(x=ntweets, y=ics3)) + geom_point()
r$ics3 <- 0
r$ics3[r$ntweets > 0] <- min(log(r$ntweets[r$ntweets > 0])*2, 25)
ggplot(head(r, 10000), aes(x=ntweets, y=ics3)) + geom_point()
r$ics3 <- 0
r$ics3[r$ntweets > 0] <- log(r$ntweets[r$ntweets > 0])
ggplot(head(r, 10000), aes(x=ntweets, y=ics3)) + geom_point()
r$ics3[r$ntweets > 0] <- log(r$ntweets[r$ntweets > 0])*2
ggplot(head(r, 10000), aes(x=ntweets, y=ics3)) + geom_point()
r$ics3[r$ntweets > 0] <- min(log(r$ntweets[r$ntweets > 0])*2, 25)
ggplot(head(r, 10000), aes(x=ntweets, y=ics3)) + geom_point()
r$ics3[r$ntweets > 0] <- pmin(log(r$ntweets[r$ntweets > 0])*2, 25)
ggplot(head(r, 10000), aes(x=ntweets, y=ics3)) + geom_point()
hist(r$ics3)
ggplot(head(r, 10000), aes(x=impact, y=ics4)) + geom_point()
hist(log(r$impact))
f_impact <- function(x) {
res <- 0
if (x > 0.25) { res <- 5 }
if (x > 0.5) { res <- 10 }
if (x > 0.75) { res <- 15 }
if (x > 1) { res <- 20 }
if (x > 2) { res <- 25 }
return(res)
}
r$ics1 <- r$finbio*25
r$ics2 <- 0
r$ics2[r$nfollowers > 5] <- log(r$nfollowers[r$nfollowers > 5])
r$ics3 <- 0
r$ics3[r$ntweets > 0] <- pmin(log(r$ntweets[r$ntweets > 0])*2, 25)
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
f_impact <- function(x) {
res <- 0
if (x > 0.25) { res <- 5 }
if (x > 0.5) { res <- 10 }
if (x > 0.75) { res <- 15 }
if (x > 1) { res <- 20 }
if (x > 2) { res <- 25 }
return(res)
}
r$ics1 <- r$finbio*25
r$ics2 <- 0
r$ics2[r$nfollowers > 0] <- log(r$nfollowers[r$nfollowers > 0])
r$ics3 <- 0
r$ics3[r$ntweets > 0] <- pmin(log(r$ntweets[r$ntweets > 0])*2, 25)
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
r[r$ics_new > 75]
r[r$ics_new > 75,]
tailr[r$ics_new > 75,])
tail(r[r$ics_new > 75,])
source('~/Documents/isentium/signal/Rcode/research/ics_new.R', echo=TRUE)
head(r)
hist(r$ics_new)
hist(r$ics4)
hist(r$impact)
summary(r$impact)
hist(r$impact[r$impact < 10])
hist(r$impact[r$impact < 1])
f_impact <- function(x) {
res <- 0
if (x > 0.1) { res <- 15 }
if (x > 0.2) { res <- 25 }
return(res)
}
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
hist(r$ics1)
hist(r$ics2)
r$ics2[r$nfollowers > 0] <- pmin(log(r$nfollowers[r$nfollowers > 0])*2, 25)
hist(r$ics2)
hist(r$ics3)
hist(r$ics4)
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
r$ics2 <- 0
r$ics2[r$nfollowers > 5] <- pmin(log(r$nfollowers[r$nfollowers > 0])*2, 25)
r$ics3 <- 0
r$ics3[r$ntweets > 5] <- pmin(log(r$ntweets[r$ntweets > 0])*2, 25)
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
length(r$ics_new[r$ics_new == 0])
f_impact <- function(x) {
res <- 0
if (x > 0.1) { res <- 15 }
if (x > 0.2) { res <- 25 }
return(res)
}
r$ics1 <- r$finbio*25
r$ics2 <- 0
r$ics2[r$nfollowers > 5] <- pmin(log(r$nfollowers[r$nfollowers > 0])*2, 25)
r$ics3 <- 0
r$ics3[r$ntweets > 5] <- pmin(log(r$ntweets[r$ntweets > 0])*2, 25)
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
#length(r$ics[r$ics == 0])
length(r$ics_new[r$ics_new == 0])
r$ics1 <- r$finbio*25
r$ics2 <- 0
r$ics2[r$nfollowers > 5] <- pmin(log(r$nfollowers[r$nfollowers > 5])*2, 25)
r$ics3 <- 0
r$ics3[r$ntweets > 5] <- pmin(log(r$ntweets[r$ntweets > 5])*2, 25)
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
#length(r$ics[r$ics == 0])
length(r$ics_new[r$ics_new == 0])
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 2)
hist(r$ics_new)
hist(r$ics1)
hist(r$ics2)
hist(r$ics3)
hist(r$ics4)
r$ics1 <- r$finbio*25
r$ics2 <- 0
r$ics2[r$nfollowers > 10] <- pmin(log(r$nfollowers[r$nfollowers > 10])*2, 25)
r$ics3 <- 0
r$ics3[r$ntweets > 10] <- pmin(log(r$ntweets[r$ntweets > 10])*2, 25)
r$ics4 <- as.numeric(lapply(r$impact, f_impact))
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
hist(r$ics_new)
length(r$ics_new[r$ics_new == 0])
138/500
source('~/Documents/isentium/signal/Rcode/research/ics_new.R', echo=TRUE)
hist(r$ics)
hist(r$ics[r$ics != 1000)
hist(r$ics[r$ics != 1000])
hist(r$ics_new)
hist(r$ics[r$ics != 1000])
hist(r$ics_new)
length(r$ics[r$ics == 0])
length(r$ics_new[r$ics_new == 0])
head(r[order(r$ics_new), ])
head(r[order(-r$ics_new), c("date","time","sentiment","ics_new")])
head(r[order(-r$ics_new), c("date","time","sentiment","ics_new","nfollowers","ntweets")])
head(r[order(-r$ics_new), c("date","time","sentiment","ics_new","nfollowers","ntweets")], 20)
head(r[r$ics_new > 95, c("date","time","sentiment","ics_new","nfollowers","ntweets")], 20)
tail(r[r$ics_new > 95, c("date","time","sentiment","ics_new","nfollowers","ntweets")], 20)
head(r[r$ics_new > 95, c("date","time","sentiment","ics_new","nfollowers","ntweets","authorID")], 20)
unique(r[r$ics_new > 95, ]$authorID)
unique(r[r$ics_new > 90, ]$authorID)
for (i in 1:x)) { print i }
x <- length(unique(r[r$ics_new > 90, ]$authorID)
for (i in 1:x)) { print i }
for (i in 1:x) { print i }
for (i in 1:x) { print i; }
x <- unique(r[r$ics_new > 90, ]$authorID)
for (i in 1:length(x)) {
print(i)
}
for (i in 1:length(x)) {
print(x[i])
}
for (i in 1:length(x)) {
a <- x[i]
tail(r[r$authorID == a, c("date","time","sentiment","ics_new","nfollowers","ntweets","authorID")])
}
for (i in 1:length(x)) {
a <- x[i]
print(tail(r[r$authorID == a, c("date","time","sentiment","ics_new","nfollowers","ntweets","authorID")]))
}
for (i in 1:length(x)) {
a <- x[i]
print(tail(r[r$authorID == a, c("date","time","sentiment","ics_new","nfollowers","ntweets","authorID")], 2))
}
source('~/Documents/isentium/signal/Rcode/research/ics_new.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/isentium/signal/Rcode/research/ics_new.R', echo=TRUE)
hist(r$ics[r$ics != 1000])
hist(r$ics_new)
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 0)
#hist(r$ics[r$ics != 1000])
hist(r$ics_new)
1
#hist(r$ics[r$ics != 1000])
hist(r$ics_new)
r$ics_new <- (r$ics1 + r$ics2 + r$ics3 + r$ics4) * (((r$ics1 > 0) + (r$ics2 > 0) + (r$ics3 > 0) + (r$ics4 > 0)) > 1)
#hist(r$ics[r$ics != 1000])
hist(r$ics_new)
length(r$ics[r$ics == 0])
source('~/.active-rstudio-document', echo=TRUE)
length(r$ics_new[r$ics_new == 0])
setwd("~/Dropbox (Personal)/Projects/game AI/crossword/")
list.files()
?read.csv
r <- read.table("all_puzzles.txt")
r <- read.table("all_puzzles.txt", sep="\t")
r <- read.table("all_puzzles.txt", sep="\t")
r <- read.table("all_puzzles_2.txt", sep="\t")
r <- read.table("all_puzzles_2.txt", sep="\t")
r <- read.table("all_puzzles_2.txt", sep="\t")
r <- read.table("all_puzzles_2.txt", sep="\t", as.is=T)
r <- read.table("all_puzzles_2.txt", sep="\t", nrows = 100)
r
head(r)
tail(r)
r <- read.table("all_puzzles_2.txt", sep="\t", nrows = 100, allowEscapes=T)
r <- read.table("all_puzzles_2.txt", sep="\t", allowEscapes=T)
r <- read.table("all_puzzles_2.txt", sep="|")
r <- read.table("all_puzzles_2.txt", sep="|", nrows=10)
r
r <- read.delim("all_puzzles_2.txt", sep="|", nrows=10)
r
r <- read.delim("all_puzzles_2.txt", sep="|", nrows=10, header=F)
r
r <- read.delim("all_puzzles_2.txt", sep="|", nrows=1000, header=F)
tail(r)
r <- read.delim("all_puzzles_2.txt", sep="|", header=F)
r <- read.delim("all_puzzles_2.txt", sep="|", header=F, col.names=c("i","clue","word","n","d","y","f"))
tail(r)
unique(r$d)
r2 <- data.table(r)
require(data.table)
r2 <- data.table(r)
r2
r2$i <- NULL
r2
r2$clue <- NULL
r2
require(ggplot2)
ggplot(r2, aes(x=d,y=n)) + ggpoint()
ggplot(r2, aes(x=d,y=n)) + gg_point()
?ggplot
ggplot(r2, aes(x=d,y=n)) + geom_point()
ggplot(r2, aes(x=d,y=n)) + geom_jitter(position = position_jitter(width = .5))
ggplot(r2, aes(x=d,y=n)) + geom_jitter(position = position_jitter(width = .05))
r2
r2[,list(mean=mean(n),sd=sd(n)), by=d]
x <-r2[,list(mean=mean(n),sd=sd(n)), by=d]
x[order(x$d),]
fix(x)
r2[,list(mean=mean(n),median=median(n),sd=sd(n)), by=d]
r2[,list(median=median(n),sd=sd(n)), by=d]
r2[,list(meann=mean(n),sd=sd(n)), by=d]
r2[,list(mean=median(n),sd=sd(n)), by=d]
mean(r2[d==1]$n)
median(r2[d==1]$n)
median(r2[d==2]$n)
median(r2[d==3]$n)
median(r2[d==4]$n)
median(r2[d==5]$n)
median(r2[d==6]$n)
list.files()
a <- read.csv("model_results.csv")
a
head(a)
a <- read.csv("model_results.csv", header=F, col.names=c("d","size","picker","t.mean","t.std","n.mean","n.std"))
head(a)
tail(a)
ggplot(a, aes(x=size, y=t.mean)) + geom_point()
ggplot(a, aes(x=d, y=t.mean)) + geom_point()
ggplot(a, aes(x=size, y=t.mean)) + geom_point()
ggplot(a, aes(x=size, y=t.mean, group=picker)) + geom_point()
ggplot(a, aes(x=size, y=t.mean, group=picker, color=picker)) + geom_point()
ggplot(a[a$d == "mon"], aes(x=size, y=t.mean, group=picker, color=picker)) + geom_point()
ggplot(a[a$d == "mon",], aes(x=size, y=t.mean, group=picker, color=picker)) + geom_point()
ggplot(a[a$d == "tue",], aes(x=size, y=t.mean, group=picker, color=picker)) + geom_point()
ggplot(a[a$d == "wed",], aes(x=size, y=t.mean, group=picker, color=picker)) + geom_point()
ggplot(a[a$d == "wed",], aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point()
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point()
a <- read.csv("model_results.csv", header=F, col.names=c("d","size","picker","t.mean","t.std","n.mean","n.std"))
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point()
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point() + gg_title("Strategy Performance (time) vs Grid Size, Difficulty")
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty")
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty")
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty") + ylab("Mean Solve Time")
ggplot(a, aes(x=paste(size, d), y=n.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty") + ylab("Mean Solve Time")
ggplot(a, aes(x=paste(size, d), y=n.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (# turns) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty") + ylab("Mean # Turns")
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty") + ylab("Mean Solve Time")
ggplot(a, aes(x=paste(size, d), y=t.mean/10, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty") + ylab("Mean Solve Time")
a <- read.csv("model_resultsB.csv", header=F, col.names=c("d","size","picker","t.mean","t.std","n.mean","n.std"))
a
a = data.table(a)
a
clear
a
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty") + ylab("Mean Solve Time")
dim(a)
a <- read.csv("model_resultsB.csv", header=F, col.names=c("d","size","picker","t.mean","t.std","n.mean","n.std"))
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty") + ylab("Mean Solve Time")
a <- read.csv("model_resultsB.csv", header=F, col.names=c("d","size","picker","t.mean","t.std","n.mean","n.std"))
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty") + ylab("Mean Solve Time")
ggplot(a, aes(x=paste(size, d), y=n.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty") + ylab("Mean Solve Time")
ggplot(a, aes(x=paste(size, d), y=t.mean, group=picker, color=picker)) + geom_point() + labs(title="Strategy Performance (time) vs Grid Size, Difficulty") + xlab("Grid Size, Difficulty") + ylab("Mean Solve Time")
